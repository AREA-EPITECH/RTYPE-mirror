name: C++ Workflow

on:
  push:
    branches:
      - main
      - dev
      - feat-workflow
  pull_request:
    branches:
      - main
      - dev

jobs:
  lint_and_format:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Install clang-format and clang-tidy
      - name: Install clang-format and clang-tidy
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format clang-tidy

      # Check formatting with clang-format using .clang-format
      - name: Check formatting with clang-format
        run: |
          find . -name "*.cpp" -or -name "*.hpp" | xargs clang-format -i

#      - name: Generate compile_commands.json using CMake
#        run: |
#          cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=YES

      # Run clang-tidy using .clang-tidy
      - name: Run clang-tidy
        run: |
          find . -name "*.cpp" -or -name "*.hpp" | xargs clang-tidy -p=build -fix

#  build:
#    if: github.repository == 'AREA-EPITECH/RTYPE-mirror'
#    name: Build project using CMake
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v3
#
#      - name: Set up vcpkg
#        uses: lukka/run-vcpkg@v11
#        with:
#          vcpkgJsonGlob: '**/vcpkg.json'
#          vcpkgGitCommitId: 'eba7c6a894fce24146af4fdf161fef8e90dd6be3'
#
#      - name: Install CMake
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y build-essential cmake libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config
#
#      - name: Configure CMake
#        run: cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake
#
#      - name: Build project
#        run: cmake --build build

#  deploy_docs:
#    if: github.repository == 'AREA-EPITECH/RTYPE-mirror'
#    name: Deploy Documentation to GitHub Pages
#    runs-on: ubuntu-latest
##    needs: build
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Doxygen action
#        uses: mattnotmitt/doxygen-action@v1.9.5
#        with:
#          working-directory: './docs/'
#          doxyfile-path: './Doxyfile'
#          enable-latex: true
#
#      - name: Deploy to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./docs/html

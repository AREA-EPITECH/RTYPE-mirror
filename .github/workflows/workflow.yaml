name: C++ Workflow

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  linter:
    if: github.repository == 'AREA-EPITECH/RTYPE-mirror'
    name: Run Clang-Tidy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get install clang-tidy

      - name: Run Clang-Tidy
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
          cd ..
          clang-tidy -p build $(find . -name '*.cpp')

  formatter:
    if: github.repository == 'AREA-EPITECH/RTYPE-mirror'
    name: Run Clang-Format
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get install clang-format

      - name: Run Clang-Format
        run: |
          find . -name '*.cpp' -o -name '*.h' | xargs clang-format -i

  build:
    if: github.repository == 'AREA-EPITECH/RTYPE-mirror'
    name: Build with CMake and vcpkg
    runs-on: ubuntu-latest
    needs: formatter
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

#      - name: Configure CMake
#        run: |
#          mkdir -p build
#          cd build
#          cmake -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake ..

      - name: Build project
        run: |
          cmake --preset=default
          cmake --build build

  deploy_docs:
    if: github.repository == 'AREA-EPITECH/RTYPE-mirror'
    name: Deploy Documentation to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up doxygen
        run: sudo apt-get install doxygen graphviz

      - name: Generate documentation
        run: |
          mkdir -p build
          cd build
          doxygen ../Doxyfile

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/html
